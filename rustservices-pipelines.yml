# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  net_lib_path: $(Build.SourcesDirectory)/Rust/net_lib
  rust_release_path: $(Build.SourcesDirectory)/Rust/net_lib/target/release
  imageName: test-rust-repo

steps:
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --profile minimal --default-host x86_64-pc-windows-msvc --default-toolchain stable
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
  - script: cargo build --release
    workingDirectory: '$(net_lib_path)'
  - task: CopyFiles@2
    inputs:
      Contents: |
        $(rust_release_path)/hello_world.exe
        $(rust_release_path)/discovery_server.exe
        $(rust_release_path)/smart_monitor_server.exe
        **/Channel.toml
      TargetFolder: $(build.artifactstagingdirectory)
      flattenFolders: true
  - publish: $(build.artifactstagingdirectory)
    artifact: Rust
    displayName: artifact $(build.artifactstagingdirectory)ÃŸ